@startuml class

class Image {
  +uint32_t *buf;
  +int width,
  +int height;

  +Image(int w=100, int h=100);
  +Image(const Image& image);
  +Image& operator=(const Image& image);
  +~Image();
  +void clear(uint32_t c);
  +void drawHLine(int x,int y,int w,uint32_t c);
  +void drawVLine(int x,int y,int h,uint32_t c);
  +void fillBox(int x,int y,int w,int h,uint32_t c);
  +void setPixel(int x,int y,uint32_t c);
  +void blendPixel(int x,int y,uint32_t c,int alpha);
  +void writeBitmap(const char *filename);
  +int getWidth()
  +int getHeight()
}

class Canvas {
  -int cur_x
  -int cur_y
  -int margin
  -int indent_size
  -int font_size
  -int dpi
  -FT_Library library
  -FT_Face face
  +Canvas(std::string font_file_name, int w = 100, int h = 100, int margin = 10, int indent_size = 10, int font_size = 16, int dpi = 72)
  +~Canvas()
  +void loadGlyph(FT_ULong glyph_index)
  +void writeGlyph(int x, int y)
  +void writeGlyphPair(FT_ULong left, FT_ULong right, int n=4)
  +void writeGlyphPair(std::vector<FT_ULong> left, std::vector<FT_ULong> right, int n=4)
  +void writeString(std::string s, int x, int y)
  +void writeHeading(std::string heading, int n=0)
  -void setCurX(int cur_x)
  -void setCurY(int cur_y)
}
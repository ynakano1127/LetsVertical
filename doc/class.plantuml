@startuml class

class Tag {
    -uint32_t tag
    +Tag(uint32_t tag)
    +Tag(char one, char two, char three, char four)
    +void setTag(uint32_t tag)
    +uint32_t getTag()
    +string toString()
}

class FontFile {
    -ifstream stm
    -string filename
    +File(string filename)
    +~File()
    +bool isOpen()
    +void open()
    +void close()
    +void seekBeg(uiint32 pos)
    +void seekCur(uiint32 pos)
    +void read(char* buff, uint32 n)
    +uint32_t position()
}

class FontSeeker {
    -FontFile font_file;
    -stack<uint32> pos_save
    -Mpa<Tag, uint32> table_offsets
    +FontSeeker(string font_file_name)
    +~FontSeeker()
    +void savePos()
    +void loadPos()
    +void gotoTable(Tag tag)
    +uint8_t read8()
    +uint16_t read16()
    +uint32_t read32()
    +void seek(uint32 pos)
    +void seekFromNowPos(uin32 pos)
    +void seekFromTable(uint32 pos)
}

class Gsub {
    -uint16_t major_version
    -uint16_t minor_version
    -ScriptList script_list
    -FeatureList feature_list
    -LookupList lookupList
    +Gsub(FontSeeker fs)
    +uint16_t getMajorVersion()
    +uint16_t getMinorVersion()
    +ScriptList getScriptList()
    +FeatureList getFeatureList()
    +LookupList getLookupList()
}

class ScriptList {
    -uint32_t scriptlist_offset
    -uint16_t script_count
    -vector<ScriptRecord> script_list
    +ScriptList(FontSeeker fs, uint32_t scriptlist_offset)
    +vector<ScriptRecord> getScriptList()
}

class ScriptRecord {
    -uint32_t scriptlist_offset
    -Tag script_tag
    -Script script
    +ScriptRecord(FontSeeker fs, uint32_t scriptlist_offset)
    +Tag getScriptTag()
    +Script getScript()
}

class Script {
    -uint32_t script_offset
    -LangSys default_lang_sys
    -uint16_t lang_sys_count
    -vector<LangSysRecord> lang_sys_list
    +Script(FontSeeker fs, uint32_t script_offset)
    +LangSys getDefaultLangSys()
    +vector<LangSysRecord> getLangSysList()
}

class LangSysRecord {
    -uint32_t script_offset
    -Tag lang_sys_tag
    -LangSys lang_sys
    +LangSysRecord(FontSeeker fs, uint32_t script_offset)
    +Tag getLangSysTag()
    +LangSys getLangSys()
}

class LangSys {
    -uint32_t langsys_offset
    -uint16_t lookup_order
    -uint16_t required_feature_index
    -uint16_t feature_index_count
    -vector<uint16_t> feature_indices
    +LangSys(FontSeeker fs, uint32_t langsys_offset)
    +uint16_t getLookupOrder()
    +uint16_t getRequiredFeatureIndex()
    +vector<uint16_t> getFeatureIndices()
}

Gsub "1" *-- "1" ScriptList
ScriptList "1" *-- "many" ScriptRecord
ScriptRecord "1" *-- "1" Script
Script "1" *-- "many" LangSysRecord
LangSysRecord "1" *-- "1" LangSys


class FeatureList {
    -uint32_t featurelist_offset
    -uint16_t feature_count
    -vector<FeatureRecord> feature_list
    +FeatureList(FontSeeker fs, uint32_t featurelist_offset)
    +vector<FeatureRecord> getFeatureList()
}

class FeatureRecord {
    -uint32_t featurelist_offset
    -Tag feature_tag
    -Feature feature
    +FeatureRecord(FontSeeker fs, uint32_t featurelist_offset)
    +Tag getFeatureTag()
    +Feature getFeature()
}

class Feature {
    -uint32_t feature_offset
    -uint16_t feature_params
    -uint16_t lookup_index_count
    -vector<uint16_t> lookup_list_indices
    +Feature(FontSeeker fs, uint32_t feature_offset)
    +uint16_t getFeatureParams()
    +vector<uint16_t> getLookupListIndices()
}

Gsub "1" *-- "1" FeatureList
FeatureList "1" *-- "many" FeatureRecord
FeatureRecord "1" *-- "1" Feature

class LookupList{
    -uint32_t lookuptlist_offset
    -uint16_t lookup_count
    -vector<Lookup> lookup_list
    +LookupList(FontSeeker fs, uint32_t lookuptlist_offset)
    +vector<Lookup> getLookupList()
}

class Lookup {
    -uint32_t lookup_offset
    -uint16_t lookup_type
    -uint16_t lookup_flag
    -uint16_t sub_table_count
    -vector<uint16_t> subtable_offsets
    -uint16_t mark_filtering_set
    +Lookup(FontSeeker fs, uint32_t lookup_offset)
    +uint32_t getLookupOffset()
    +uint16_t getLookupType()
    +uint16_t getLookupFlag()
    +vector<uint16_t> getSubtableOffsets()
    +uint16_t getMarkFilteringSet()
}

class LookupSubtableTypeOne {
    -uint32_t offset
    -uint16_t subs_format
    -Coverage coverage
    ' format 1
    -uint16_t delta_glyph_id
    ' format 2
    -uint16_t glyph_count
    -vector<uint16_t> substitute_glyph_ids
    +LookupSubtableTypeOne(FontSeeker fs, uint32_t offset)
    +uint16_t convertGlyph(uint16_t glyph_id)
    +uint16_t getSubsFormat()
    +Coverage getCoverage()
    +uint16_t getDeltaGlyphId()
    +vector<uint16_t> getSubstituteGlyphIds()
}

class Coverage {
    -uint32_t offset
    -Map<uint16_t, uint16_t> coverage_map
    -uint16_t coverage_format
    '  format 1
    -uint16_t glyph_count
    -vector<uint16_t> glyph_array
    ' format 2
    -uint16_t range_count
    -vector<RangeRecord> range_records
    +Coverage(FontSeeker fs, uint32_t offset)
    +Map<uint16_t, uint16_t> getCoverageMap()
    +uint16_t getCoverageFormat()
    +vector<uint16_t> getGlyphArray()
    +vector<RangeRecord> getRangeRecords()

}

class RangeRecord {
    -uint16_t start_glyph_id
    -uint16_t end_glyph_id
    -uint16_t start_coverage_index
    +RangeRecord(FontSeeker fs)
    +uint16_t getStartGlyphId()
    +uint16_t getEndGlyphId()
    +uint16_t getStartCoverageIndex()
}

Gsub "1" *-- "1" LookupList
LookupList "1" *-- "many" Lookup

LookupSubtableTypeOne "1" *-- "1" Coverage
Coverage "1" *-- "many" RangeRecord


@enduml
